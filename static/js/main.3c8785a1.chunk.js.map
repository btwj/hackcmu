{"version":3,"sources":["components/ClassForm.module.scss","stores/SelectedClassStore.js","stores/Data.js","Util.js","components/ClassForm.js","stores/Info.js","components/CommitmentForm.js","components/TaskForm.js","scheduler/blockify.js","scheduler/anneal.js","scheduler/sleep.js","components/Form.js","scheduler/meal.js","components/Calendar.js","components/CalendarExplanation.js","App.js","serviceWorker.js","index.js","components/CommitmentForm.module.scss","components/Form.module.scss","components/Calendar.module.scss","components/CalendarExplanation.module.scss","components/TaskForm.module.scss"],"names":["module","exports","useStore","create","set","get","classes","addClass","newClass","courseData","courseID","state","deleteClass","id","filter","addedClass","updateLecture","courseId","lectureId","course","console","log","lecture","useDataStore","fceData","getFceData","a","Object","keys","length","fetch","method","response","json","timeStrToMins","timeStr","split","hours","mins","parseInt","timeStr12HrToMins","slice","minsToTimeStr","hour","Math","floor","min","hourStr","dayStrs","dayTimeToStr","days","from","to","output","sort","day","SelectedClass","props","className","styles","selectedClass","delete","onClick","courseNumber","classHeader","section","courseName","dayTime","value","onChange","e","target","lectureDayTimes","map","lectureDayTime","idx","name","dayTimeStr","recitation","timeInfo","units","extraTime","ClassForm","classInput","useRef","inputClass","classValue","current","sectionName","Promise","all","courseResponse","sectionFound","lectures","lectureTime","entries","times","begin","end","push","sectionTime","sections","courseIdWithoutDash","replace","extraMins","hrs","extraHours","time","flat","sectionData","input","placeholder","ref","selected","key","useInfoStore","commitmentId","commitments","addCommitment","commitment","toMins","toStr","fromMins","fromStr","duration","commitmentItem","deleteCommitment","taskId","tasks","addTask","task","deleteTask","calendarData","setCalendarData","data","sleepTime","wakeTime","setSleepTime","setWakeTime","Commitment","header","CommitmentForm","commitmentInput","fromInput","toInput","dayInput","timeInput","select","options","label","type","step","add","commitmentName","Task","TaskForm","taskInput","hoursInput","inputName","inputHours","taskName","chop_block","block","start","get_loss","calendar","blocks","block_assignments","unfixed","person_type","loss","run_times","assignment","get_run_times","info","pow","current_time","current_day","current_task","instances","Array","fill","num","get_random_task","rest_chance","random","mutate","assignments","idx2","t","randomly_assign","getLatestTime","latestTime","event","Form","selectedClasses","typeInput","consolidateStores","form","quote","card","question","button","undefined","fixed","i","personType","sleepStart","sleepEnd","latestClassTime","earliestClassTime","earliestSleep","latestWakeUp","getSleep","sleep","wake","meal_blocks","new_blocks","day_idx","lunch_block","b","dinner_block","concat","assign_meals","wake_min","sleep_min","cur_time","split_blocks","blockify","total_time","unfixed_time","new_assignments","j","new_loss","mutate_times","k","anneal","current_start","current_end","is_continued","consolidate_blocks","Calendar","timeEls","colorMap","taskColorMap","KolorWheel","right","calendarItems","dotw","dayItems","wakeItem","style","bottom","sleepItem","top","item","color","includes","l","s","getHex","height","backgroundColor","itemName","CalendarExplanation","explanation","cardHeader","footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c8785a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ClassForm_input__2MR32\",\"selectedClass\":\"ClassForm_selectedClass__1hH6b\",\"delete\":\"ClassForm_delete__fzcDn\",\"classHeader\":\"ClassForm_classHeader__1-7mu\",\"section\":\"ClassForm_section__1clSM\",\"courseNumber\":\"ClassForm_courseNumber__1EVxv\",\"dayTime\":\"ClassForm_dayTime__3Y4kj\",\"courseName\":\"ClassForm_courseName__j1Wxn\",\"timeInfo\":\"ClassForm_timeInfo__hezp9\",\"extraTime\":\"ClassForm_extraTime__3BEYe\",\"lecture\":\"ClassForm_lecture__3MRMn\"};","import create from 'zustand';\n\nexport const useStore = create((set, get) => ({\n    classes: [],\n    addClass: (newClass) => {\n        const classes = get().classes;\n        for (var class_ of classes) {\n            if (class_.courseData.courseID == newClass.courseData.courseID) return;\n        }\n\n        set(state => ({\n            classes: [...state.classes, newClass]\n        }));\n    },\n    deleteClass: (id) => {\n        set(state => ({\n            classes: state.classes.filter(addedClass => addedClass.courseData.courseID != id)\n        }));\n    },\n    updateLecture: (courseId, lectureId) => {\n        const classes = get().classes;\n        const course = classes.filter(addedClass => addedClass.courseData.courseID == courseId)[0];\n        console.log(course);\n\n        course.lecture = lectureId;\n        set(state => ({\n            classes: classes\n        }));\n    }\n}))","import create from 'zustand';\n\nexport const useDataStore = create((set, get) => ({\n    fceData: {},\n    getFceData: async () => {\n        if (Object.keys(get().fceData).length != 0) return;\n        let response = await fetch(`https://cmu-student-government.github.io/cmunit/fce.json`, {\n            method: 'GET'\n        });\n        let fceData = await response.json();\n        set({ fceData });\n    }\n}))","export const timeStrToMins = (timeStr) => {\n    let [hours, mins] = timeStr.split(\":\");\n    hours = parseInt(hours);\n    mins = parseInt(mins);\n    return hours * 60 + mins;\n}\n\nexport const timeStr12HrToMins = (timeStr) => {\n    let hours = parseInt(timeStr.slice(0, 2));\n    const mins = parseInt(timeStr.slice(3, 5));\n    const amPm = timeStr.slice(5);\n\n    if (amPm == 'PM' && hours != 12) {\n        hours += 12;\n    }\n\n    return hours * 60 + mins;\n}\n\nexport const minsToTimeStr = (mins) => {\n    const hour = Math.floor(mins / 60);\n    const min = mins % 60;\n    \n    let hourStr = (hour < 10 ? \"0\" : \"\") + hour;\n    const minStr = (min < 10 ? \"0\" : \"\") + min;\n\n    if (hourStr == \"24\") hourStr = \"00\";\n    \n    return hourStr + \":\" + minStr;\n}\n\nexport const dayStrs = ['', 'M', 'T', 'W', 'R', 'F', 'S', 'U']\n\nexport const dayTimeToStr = (days, from, to) => {\n    let output = \"\";\n\n    for (var day of days.sort()) {\n        output += dayStrs[day];\n    }\n    \n    output += \" \";\n\n    output += minsToTimeStr(from);\n    output += \"–\";\n    output += minsToTimeStr(to);\n    return output;\n}","import React, { useRef } from 'react';\nimport Select from 'react-select';\nimport styles from './ClassForm.module.scss';\nimport { FaPlus, FaTimes } from 'react-icons/fa';\nimport { useStore } from '../stores/SelectedClassStore.js';\nimport { useDataStore } from '../stores/Data.js';\nimport { dayTimeToStr, timeStr12HrToMins } from '../Util.js';\n\n// TODO: Delete Class\n\nconst SelectedClass = (props) => {\n    const deleteClass = useStore(state => state.deleteClass);\n    const updateLecture = useStore(state => state.updateLecture);\n\n    const onClick = () => {\n        console.log('deleting', props.courseNumber);\n        deleteClass(props.courseNumber);\n    }\n\n    const onSelect = (e) => {\n        console.log('selecting', e.target.value);\n        updateLecture(props.courseNumber, e.target.value);\n    }\n\n    return (\n        <div className={styles.selectedClass}>\n            <div className={styles.delete} onClick={onClick}><FaTimes /></div>\n            <div>\n                <div className={styles.classHeader}>\n                    <span className={styles.courseNumber}>{props.courseNumber}</span>\n                    {\n                        props.section ? <span className={styles.section}>{props.section}</span> : ''\n                    }  \n                    <span className={styles.courseName}>{props.courseName}</span>\n                    <div className={styles.dayTime}>\n                        <select className={styles.lecture} value={props.lecture}\n                         onChange={onSelect}>\n                        {\n                            props.lectureDayTimes.map(lectureDayTime => \n                                <option value={lectureDayTime.idx}>\n                                    {lectureDayTime.name} – {lectureDayTime.dayTimeStr}\n                                </option>\n                            )\n                        }\n                        </select>\n                        <div className={styles.recitation}>{props.dayTime}</div>\n                    </div>\n                    \n                </div>\n                <div className={styles.timeInfo}>\n                    <div className={styles.units}>{props.units} units</div>\n                    <div className={styles.extraTime}>{props.extraTime} extra hours</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst ClassForm = (props) => {\n    const classInput = useRef();\n    \n    const classes = useStore(state => state.classes);\n    const addClass = useStore(state => state.addClass);\n    const fceData = useDataStore(state => state.fceData);\n    const getFceData = useDataStore(state => state.getFceData);\n\n    getFceData(); // Don't know why can't get this to call in Promise\n\n    const inputClass = async () => {\n        const classValue = classInput.current.value;\n        classInput.current.value = \"\";\n        const [courseNumber, sectionName] = classValue.split(\" \");\n\n        for (var addedClass of classes) {\n            if (addedClass.courseData.courseID == courseNumber) return; //course already added\n        }\n\n        try {\n            let [courseResponse, _] = await Promise.all([\n                fetch(`https://apis.scottylabs.org/course/courses/courseID/${courseNumber}`, {\n                    method: 'GET'\n                }), getFceData()]);\n            \n            let courseData = await courseResponse.json();\n            let sectionFound = false;\n\n            let lectures = courseData.lectures;\n            let lectureDayTimes = [];\n            let lectureTime = 0;\n            for (const [idx, lecture] of lectures.entries()) {\n                const from = timeStr12HrToMins(lecture.times[0].begin);\n                const to = timeStr12HrToMins(lecture.times[0].end)\n                lectureTime = lecture.times[0].days.length * (to - from);\n                lectureDayTimes.push({\n                    idx: idx,\n                    name: lecture.name,\n                    dayTimeStr: dayTimeToStr(lecture.times[0].days, from, to)\n                });\n            }\n            console.log('lecture time', lectureTime);\n            let sectionTime = 0;\n\n            if (courseData.sections.length == 0) {\n                let courseIdWithoutDash = courseNumber.replace('-', '');\n                if (courseIdWithoutDash in fceData) {\n                    const extraMins = fceData[courseIdWithoutDash].hrs * 60 - lectureTime;\n                    const extraHours = Math.floor(extraMins / 60 / 3 * 2);\n\n                    addClass({courseData,\n                        dayTime: '',\n                        lecture: 0,\n                        extraTime: extraHours,\n                        lectureTime: lectureTime, lectureDayTimes: lectureDayTimes,\n                        fceData: fceData[courseIdWithoutDash]});\n                } else {\n                    addClass({courseData,\n                        dayTime: '',\n                        extraTime: 0,\n                        lecture: 0,\n                        lectureTime: lectureTime, lectureDayTimes: lectureDayTimes});\n                }\n            } else {\n                for (const section of courseData.sections) {\n                    if (section.name == sectionName) {\n                        sectionFound = true;\n                        let courseIdWithoutDash = courseNumber.replace('-', '');\n    \n                        const from = timeStr12HrToMins(section.times[0].begin);\n                        const to = timeStr12HrToMins(section.times[0].end);\n                        const days = section.times.map(time => time.days).flat(1);\n    \n                        sectionTime = days.length * (to - from);\n                        \n                        if (courseIdWithoutDash in fceData) {\n                            const extraMins = fceData[courseIdWithoutDash].hrs * 60 - (sectionTime + lectureTime);\n                            const extraHours = Math.floor(extraMins / 60 / 3 * 2);\n    \n                            addClass({courseData, sectionData: section,\n                                dayTime: dayTimeToStr(days, from, to),\n                                section: section.name, lecture: 0,\n                                extraTime: extraHours,\n                                lectureTime: lectureTime, lectureDayTimes: lectureDayTimes,\n                                fceData: fceData[courseIdWithoutDash]});\n                        } else {\n                            addClass({courseData,\n                                dayTime: dayTimeToStr(days, from, to),\n                                section: section.name,\n                                extraTime: 0,\n                                lecture: 0,\n                                lectureTime: lectureTime, lectureDayTimes: lectureDayTimes});\n                        }\n                    }\n                }\n\n            }\n\n            if (!sectionFound) {\n                console.log('no section found');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (<div>\n        <div className={styles.input}>\n            <input placeholder=\"Number & Section, e.g. 01-234 B, or just Number if only lectures\" ref={classInput}></input>\n            <div onClick={inputClass}><FaPlus /></div>\n        </div>\n        <h4>Added Classes ({classes.length})</h4>\n        <div className={styles.selected}>\n            {\n                classes.map(({courseData, lectureDayTimes, section, dayTime, extraTime}) =>\n                    <SelectedClass courseNumber={courseData.courseID} section={section}\n                                   courseName={courseData.name} key={courseData.courseID}\n                                   lectureDayTimes={lectureDayTimes} dayTime={dayTime}\n                                   units={courseData.units} extraTime={extraTime}/>\n                )\n            }\n        </div>\n    </div>);\n}\n\nexport default ClassForm;","import create from 'zustand';\nimport { timeStrToMins, dayTimeToStr } from '../Util.js';\n\nexport const useInfoStore = create((set, get) => ({\n    commitmentId: 0,\n    commitments: [],\n    addCommitment: (commitment) => {\n        \n        const toMins = timeStrToMins(commitment.toStr);\n        const fromMins = timeStrToMins(commitment.fromStr)\n        const duration = (toMins - fromMins) / 60;\n\n        let commitmentItem = {...commitment, \n            id: get().commitmentId,\n            hours: duration,\n            from: fromMins,\n            to: toMins,\n            dayTime: dayTimeToStr([commitment.day], fromMins, toMins)\n        };\n        console.log('adding commitment', commitmentItem);\n\n        set(state => ({\n            commitmentId: state.commitmentId + 1,\n            commitments: [...state.commitments, commitmentItem]\n        }));\n    },\n    deleteCommitment: (commitmentId) => {\n        set(state => ({\n            commitments: state.commitments.filter(commitment =>\n                commitment.id != commitmentId)\n        }));\n    },\n    taskId: 0,\n    tasks: [],\n    addTask: (task) => {\n        set(state => ({\n            id: state.taskId,\n            taskId: state.taskId + 1,\n            tasks: [...state.tasks, task]\n        }));\n    },\n    deleteTask: (taskId) => {\n        set(state => ({\n            tasks: state.tasks.filter(task => task.id != taskId)\n        }));\n    },\n    calendarData: [[], [], [], [], [], [], []],\n    setCalendarData: (data) => {\n        set(state => ({calendarData: data}));\n    },\n    sleepTime: 22 * 60,\n    wakeTime: 6 * 60,\n    setSleepTime: (time) => {\n        set(state => ({\n            sleepTime: time\n        }));\n    },\n    setWakeTime: (time) => {\n        set(state => ({\n            wakeTime: time\n        }));\n    }\n}))","import React, { useRef } from 'react';\nimport Select from 'react-select';\nimport styles from './CommitmentForm.module.scss';\nimport { FaPlus, FaTimes } from 'react-icons/fa';\nimport { useInfoStore } from '../stores/Info.js';\n\n// TODO: Delete Class\n\nconst Commitment = (props) => {\n    const deleteCommitment = useInfoStore(state => state.deleteCommitment);\n\n    const onClick = () => {\n        console.log('deleting commitment', props.id);\n        deleteCommitment(props.id);\n    }\n\n    return (\n        <div className={styles.commitment}>\n            <div className={styles.delete} onClick={onClick}><FaTimes /></div>\n            <div>\n                <div className={styles.header}>\n                    <span className={styles.name}>{props.name}</span>\n                    <div className={styles.dayTime}>{props.dayTime}</div>\n                </div>\n                <div className={styles.timeInfo}>{props.hours} hours</div>   \n            </div>\n        </div>\n    )\n}\n\nconst CommitmentForm = (props) => {\n    const commitmentInput = useRef();\n    const fromInput = useRef();\n    const toInput = useRef();\n    const dayInput = useRef();\n\n    const dayOfTheWeekOptions = [\n        { value: 0, label: 'Monday' },\n        { value: 1, label: 'Tuesday' },\n        { value: 2, label: 'Wednesday' },\n        { value: 3, label: 'Thursday' },\n        { value: 4, label: 'Friday' },\n        { value: 5, label: 'Saturday' },\n        { value: 6, label: 'Sunday' }\n    ]\n    \n    const commitments = useInfoStore(state => state.commitments);\n    const addCommitment = useInfoStore(state => state.addCommitment);\n\n    const inputClass = () => {\n        try {\n            const commitmentName = commitmentInput.current.value;\n            const fromStr = fromInput.current.value;\n            const toStr = toInput.current.value;\n            const day = dayInput.current.state.value.value;\n            fromInput.current.value = \"\";\n            toInput.current.value = \"\";\n            commitmentInput.current.value = \"\";\n            addCommitment({name: commitmentName, fromStr, toStr, day});\n        } catch {\n\n        }\n    }\n\n    return (<div>\n        <div className={styles.timeInput}>\n            <Select className={styles.select} options={dayOfTheWeekOptions} ref={dayInput}/>\n            <label>from</label>\n            <input ref={fromInput} className={styles.from} type=\"time\" step=\"1800\"/>\n            <label>to</label>\n            <input ref={toInput} className={styles.to} type=\"time\" step=\"1800\" />\n        </div>\n        <div className={styles.input}>\n            <input placeholder=\"e.g. Club GBM\" ref={commitmentInput}></input>\n            <div className={styles.add} onClick={inputClass}><FaPlus /></div>\n        </div>\n        <h4>Added Commitments ({commitments.length})</h4>\n        <div className={styles.selected}>\n            {\n                commitments.map(commitment =>\n                    <Commitment name={commitment.name} dayTime={commitment.dayTime}\n                                hours={commitment.hours} key={commitment.id} id={commitment.id}/>\n                )\n            }\n        </div>\n    </div>);\n}\n\nexport default CommitmentForm;","import React, { useRef } from 'react';\nimport Select from 'react-select';\nimport styles from './TaskForm.module.scss';\nimport { FaPlus, FaTimes } from 'react-icons/fa';\nimport { useInfoStore } from '../stores/Info.js';\n\n// TODO: Delete Class\n\nconst Task = (props) => {\n    const deleteTask = useInfoStore(state => state.deleteTask);\n\n    const onClick = () => {\n        console.log('deleting commitment', props.id);\n        deleteTask(props.id);\n    }\n\n    return (\n        <div className={styles.task}>\n            <div className={styles.delete} onClick={onClick}><FaTimes /></div>\n            <div>\n                <div className={styles.header}>\n                    <span className={styles.name}>{props.name}</span>\n                </div>\n                <div className={styles.timeInfo}>{props.hours} hours</div>   \n            </div>\n        </div>\n    );\n}\n\nconst TaskForm = (props) => {\n    const taskInput = useRef();\n    const hoursInput = useRef();\n\n    const tasks = useInfoStore(state => state.tasks);\n    const addTask = useInfoStore(state => state.addTask);\n    \n    const inputTask = () => {\n        const taskName = taskInput.current.value;\n        const hours = hoursInput.current.value;\n\n        taskInput.current.value = \"\";\n        hoursInput.current.value = \"\";\n\n        addTask({ name: taskName, hours });\n    }\n\n    return (\n    <div>\n        <div className={styles.input}>\n            <input placeholder=\"e.g. Exercise\" ref={taskInput} className={styles.inputName}></input>\n            <input placeholder=\"hours per week\" ref={hoursInput} type=\"number\" className={styles.inputHours} min=\"0\" step=\"0.25\"></input>\n            <div className={styles.add} onClick={inputTask}><FaPlus /></div>\n        </div>\n        <h4>Added Tasks ({tasks.length})</h4>\n        <div className={styles.selected}>\n            {\n                tasks.map(task => <Task name={task.name} hours={task.hours} key={task.id} id={task.id}/>)\n            }\n        </div>\n    </div>);\n}\n\nexport default TaskForm;","const chop_block = (block) => {\n    if (block.end - block.start <= 30) {\n        return [];\n    } else if (block.end - block.start <= 90) {\n        return [block]\n    } else {\n        return [{start: block.start, end: block.start + 60}, \n            ...chop_block({start: block.start + 60, end: block.end})];\n    }\n}\n\nexport const blockify = (calendar, wake_min, sleep_min) => {\n    for (const day of calendar) {\n        day.sort((a, b) => {\n            return a.from - b.from;\n        });\n    }\n\n    return calendar.map((day, day_idx) => {\n        let cur_time = wake_min;\n        let blocks = [];\n\n        for (const event of day) {\n            if (event.from - cur_time <= 20) {\n                cur_time = event.to;\n                continue;\n            }\n\n            blocks.push({ start: cur_time, end: event.from });\n            cur_time = event.to;\n        }\n\n        blocks.push({ start: cur_time, end: sleep_min });\n\n        let split_blocks = [];\n        for (const block of blocks) {\n            split_blocks = split_blocks.concat(chop_block(block));\n        }\n\n        return split_blocks;\n    });\n}","export const get_run_times = (blocks, block_assignments, unfixed) => {\n    let run_times = {};\n\n    block_assignments.map((assignment, idx) => {\n        let block = blocks[idx];\n\n        if (!(assignment in run_times)) {\n            run_times[assignment] = 0;\n        }\n\n        run_times[assignment] += block.end - block.start;\n    });\n\n    return run_times;\n}\n\nexport const get_loss = (calendar, blocks, block_assignments, unfixed, person_type, log) => {\n    let loss = 0;\n    const run_times = get_run_times(blocks, block_assignments, unfixed);\n\n    for (const [idx, task] of unfixed.entries()) {\n        const time = task.mins;\n        if (task.info.type == 'rest') continue;\n        if (idx in run_times) {\n            if (run_times[idx] < time) {\n                loss += Math.pow(run_times[idx] - time, 2) * 10;\n            } else {\n                loss += Math.pow(run_times[idx] - time, 2);\n            }\n        } else {\n            loss += Math.pow(time, 2) * 50;\n        }\n    }\n\n    if (log) console.log(loss);\n\n    let current_time = 0;\n    let current_day = 0;\n    let current_task = 0;\n\n    let instances = new Array(unfixed.length).fill(0);\n\n    for (const [idx, assignment] of block_assignments.entries()) {\n        const block = blocks[idx];\n        if (block.day != current_day) {\n            instances[current_task] += 1;\n            current_day = block.day;\n            for (const [id, num] of instances.entries()) {\n                if (num > 1) loss += Math.pow(20 * num, 2) * 10;\n            }\n            current_task = assignment;\n            instances = new Array(unfixed.length).fill(0);\n        } else {\n            if (assignment == current_task) {\n            } else {\n                instances[current_task] += 1;\n                current_task = assignment;\n            }\n        }\n    }\n\n    if (log) console.log(loss);\n\n    instances[current_task] += 1;\n    for (const [id, num] of instances.entries()) {\n        if (num > 1) loss += Math.pow(20 * num, 2) * 10;\n    }\n\n    current_time = 0;\n    current_day = 0;\n\n    for (const [idx, assignment] of block_assignments.entries()) {\n        const block = blocks[idx];\n        if (block.day >= 5 && unfixed[assignment].info.type == 'study') {\n            loss += Math.pow(block.end - block.start, 2) // penalise weekend work\n        }\n\n        if (person_type == 'night' && block.start < 12 * 60 && unfixed[assignment].info.type == 'study') {\n            loss += Math.pow(block.end - block.start, 2);\n        }\n\n        if (person_type == 'day' && block.start > 20 * 60 && unfixed[assignment].info.type == 'study') {\n            loss += Math.pow(block.end - block.start, 2);\n        }\n\n        if (block.start < 8 * 60 && unfixed[assignment].info.type != 'rest') {\n            loss += Math.pow(block.start - 8*60, 2);\n        } else if (block.start > 22 * 60 && unfixed[assignment].info.type != 'rest') {\n            loss += Math.pow(block.start - 21*60, 2);\n        }\n\n        if (current_day != block.day) {\n            current_time = 0;\n            current_day = block.day;\n        }\n\n        if (unfixed[assignment].info.type == 'study') {\n            current_time += block.end - block.start;\n            if (unfixed[assignment].info.type == 'study' && current_time >= 150) {\n                loss += Math.pow(current_time, 2) * 10;\n            }\n        } else {\n            current_time = 0;\n        }\n    }\n\n    if (log) console.log(loss);\n\n    return loss;\n}\n\nconst get_random_task = (unfixed, rest_chance) => {\n    if (Math.random() < rest_chance) {\n        return 0;\n    } else {\n        return Math.floor(Math.random() * unfixed.length);\n    }\n}\n\nconst mutate = (assignments, unfixed, rest_chance) => {\n    let idx = Math.floor(Math.random() * assignments.length);\n    if (Math.random() < 0.5) {\n        assignments[idx] = get_random_task(unfixed, rest_chance);\n    } else {\n        let idx2 = Math.floor(Math.random() * assignments.length);\n        let t = assignments[idx];\n        assignments[idx] = assignments[idx2]\n        assignments[idx2] = t;\n    }\n}\n\nconst randomly_assign = (blocks, unfixed, rest_chance) => {\n    const tasks = unfixed;\n    return blocks.map(block => get_random_task(unfixed, rest_chance));\n}\n\nexport const anneal = (calendar, blocks, unfixed, person_type) => {\n    let total_time = 0;\n    let unfixed_time = 0;\n\n    for (const task of unfixed) {\n        if ('mins' in task) {\n            unfixed_time += task.mins;\n        }\n    }\n\n    for (const block of blocks) {\n        total_time += block.end - block.start;\n    }\n\n    let rest_chance = 1 - (unfixed_time * 1.5 / total_time);\n    console.log('rest_chance', rest_chance);\n    let assignments = randomly_assign(blocks, unfixed, rest_chance);\n    let loss = get_loss(calendar, blocks, assignments, unfixed, person_type);\n    \n    for (var i = 0; i < 1; i++) {\n        let new_assignments = randomly_assign(blocks, unfixed, rest_chance);\n        for (var j = 0; j < 50000; j++) {\n            let new_loss = get_loss(calendar, blocks, new_assignments, unfixed, person_type);\n            if (new_loss < loss) {\n                console.log('new best', loss, assignments, new_assignments);\n                assignments = [...new_assignments];\n                loss = new_loss;\n            }\n            new_assignments = [...assignments];\n            const mutate_times = Math.floor(Math.random() * 10) + 1;\n            for (var k = 0; k < mutate_times; k++) {\n                mutate(new_assignments, unfixed, rest_chance);\n            }\n        }\n    }\n\n    return [[...assignments], loss];\n}\n\nexport const consolidate_blocks = (assignments, blocks) => {\n    let current_day = 0;\n    let current_task = assignments[0];\n    let current_start = blocks[0].start;\n    let current_end = blocks[0].end;\n\n    let new_blocks = [];\n    let new_assignments = [];\n\n    let is_continued = false;\n\n    for (const [idx, block] of blocks.entries()) {\n        const assignment = assignments[idx];\n        is_continued = current_task == assignment && block.start == current_end && current_day == block.day;\n        if (is_continued) {\n            current_end = block.end;\n        } else {\n            new_blocks.push({\n                day: current_day,\n                start: current_start,\n                end: current_end\n            });\n            new_assignments.push(current_task);\n            current_start = block.start;\n            current_end = block.end;\n            current_task = assignment;\n            current_day = block.day;\n        }\n    }\n\n    if (is_continued) {\n        new_blocks.push({\n            day: current_day,\n            start: current_start,\n            end: current_end\n        });\n        new_assignments.push(current_task);\n    }\n\n    return [new_assignments, new_blocks];\n}","const getLatestTime = (calendar) => {\n    let latestTime = 0;\n    for (const day of calendar) {\n        for (const event of day) {\n            if (event.to > latestTime) latestTime = event.to\n        }\n    }\n\n    return latestTime;\n};\n\nconst getEarliestTime = (calendar) => {\n    let earliestTime = 1440;\n    for (const day of calendar) {\n        for (const event of day) {\n            if (event.to < earliestTime) earliestTime = event.to\n        }\n    }\n    return earliestTime;\n};\n\nexport const getSleep = (calendar, personType) => {\n    let sleepStart = 1;\n    let sleepEnd = 0;\n    const earliestSleep = 22 * 60;\n    const latestWakeUp = 9*60 - 30;\n\n    const latestClassTime = getLatestTime(calendar);\n    const earliestClassTime = getLatestTime(calendar);\n\n    if (personType == \"day\") {\n        if (latestClassTime <= earliestSleep - 30) {\n            sleepStart = earliestSleep;\n        } else {\n            sleepStart = latestClassTime + 30;\n        }\n        sleepEnd = 8*60 - (24*60 - sleepStart);\n    } else {\n        if (earliestClassTime >= latestWakeUp + 30) {\n            sleepEnd = latestWakeUp;\n            sleepStart = sleepEnd - 8*60;\n        } else {\n            sleepEnd = earliestClassTime - 30;\n            if (sleepEnd >= 510) {\n                sleepStart = sleepEnd - 480;\n            } else {\n                sleepStart = (1410 - (480 - sleepEnd)) % 1440;\n            }\n        }\n    }\n\n    if (sleepStart < 12 * 60) {\n        sleepStart = 24 * 60;\n    }\n\n    if (sleepStart < 22 * 60) sleepStart = 22 * 60;\n\n    if (sleepEnd < 0) {\n        sleepEnd = 6 * 60;\n    }\n\n    return [sleepStart, sleepEnd];\n}","import React, { useRef } from 'react';\nimport Select from 'react-select';\nimport styles from './Form.module.scss';\nimport ClassForm from './ClassForm.js';\nimport CommitmentForm from './CommitmentForm.js';\nimport TaskForm from './TaskForm.js';\nimport { useStore } from '../stores/SelectedClassStore.js';\nimport { useInfoStore } from '../stores/Info.js';\nimport { useDataStore } from '../stores/Data.js';\nimport { timeStr12HrToMins } from '../Util.js';\nimport { blockify } from '../scheduler/blockify.js';\nimport { assign_meals } from '../scheduler/meal.js';\nimport { anneal, consolidate_blocks, get_run_times, get_loss } from '../scheduler/anneal.js';\nimport { getSleep } from '../scheduler/sleep.js'\n\nconst Form = (props) => {\n    const typeOptions = [\n        { value: 'day', label: '☀️ Day' },\n        { value: 'night', label: '🌙 Night' }\n    ];\n\n    const selectedClasses = useStore(state => state.classes);\n    const tasks = useInfoStore(state => state.tasks);\n    const commitments = useInfoStore(state => state.commitments);\n\n    const setCalendarData = useInfoStore(state => state.setCalendarData);\n    const setSleepTime = useInfoStore(state => state.setSleepTime);\n    const setWakeTime = useInfoStore(state => state.setWakeTime);\n\n    const typeInput = useRef();\n\n    const consolidateStores = () => {\n        return {\n            selectedClasses, tasks, commitments\n        }\n    }\n\n    const makeSchedule = () => {\n        const type = typeInput.current?.state?.value?.value;\n\n        if (type === undefined) {\n            console.log('no type');\n        }\n        \n        const {selectedClasses, tasks, commitments} = consolidateStores();\n\n        let fixed = [];\n        let unfixed = [{\n            name: 'Rest',\n            info: {\n                type: 'rest',\n            }\n        }];\n\n        for (let i = 0; i < 7; i++) {\n            fixed.push([]);\n        }\n\n        console.log('selectedClasses', selectedClasses);\n        console.log('tasks', tasks);\n        console.log('commitments', commitments);\n\n        for (const selectedClass of selectedClasses) {\n            if ('sectionData' in selectedClass) {\n                for (const time of selectedClass.sectionData.times) {\n                    const from = timeStr12HrToMins(time.begin);\n                    const to = timeStr12HrToMins(time.end);\n                    const days = time.days;\n\n                    console.log(from, to, days);\n\n                    for (const day of days) {\n                        fixed[day-1].push({\n                            data: selectedClass,\n                            info: {\n                                type: 'recitation',\n                                course: selectedClass.courseData.courseID\n                            },\n                            name: `${selectedClass.courseData.courseID} ${selectedClass.section}`,\n                            from: from,\n                            to: to\n                        });\n                    }\n                }\n            }\n\n            const lecture = selectedClass.courseData.lectures[selectedClass.lecture]\n            for (const time of lecture.times) {\n                const from = timeStr12HrToMins(time.begin);\n                const to = timeStr12HrToMins(time.end);\n                for (const day of time.days) {\n                    fixed[day-1].push({\n                        data: selectedClass,\n                        info: {\n                            type: 'lecture',\n                            course: selectedClass.courseData.courseID\n                        },\n                        name: `${selectedClass.courseData.courseID} ${lecture.name}`,\n                        from: from,\n                        to: to\n                    });\n                }\n            }\n\n            if ('extraTime' in selectedClass && selectedClass.extraTime != 0) {\n                unfixed.push({\n                    info: { type: 'study', course: selectedClass.courseData.courseID },\n                    name: `${selectedClass.courseData.courseID} HW`,\n                    mins: selectedClass.extraTime * 60\n                });\n            }\n        }\n\n        for (const commitment of commitments) {\n            fixed[commitment.day].push({\n                data: commitment,\n                info: {\n                    type: 'commitment',\n                    id: commitment.id\n                },\n                name: commitment.name,\n                from: commitment.from,\n                to: commitment.to\n            })\n        }\n\n        for (const task of tasks) {\n            unfixed.push({\n                name: task.name,\n                mins: task.hours * 60,\n                info: {\n                    type: 'others'\n                }\n            });\n        }\n\n        setCalendarData(fixed);\n        console.log('unfixed', unfixed);\n        const [sleep, wake] = getSleep(fixed, type);\n\n        console.log('sleep', sleep - 30, 'wake', wake + 30);\n        setWakeTime(wake);\n        setSleepTime(sleep);\n        let blocks = blockify(fixed, wake + 30, sleep - 30);\n        let [meal_blocks, new_blocks] = assign_meals(blocks);\n        let [assignments, loss] = anneal(fixed, new_blocks, unfixed, type);\n        console.log(get_loss(fixed, new_blocks, assignments, unfixed, type, true));\n        [assignments, new_blocks] = consolidate_blocks(assignments, new_blocks);\n        for (const [day_idx, day] of meal_blocks.entries()) {\n            fixed[day_idx].push({\n                info: {\n                    type: 'meal',\n                },\n                name: 'Lunch',\n                from: day[0].start,\n                to: day[0].end\n            });\n\n            fixed[day_idx].push({\n                info: {\n                    type: 'meal',\n                },\n                name: 'Dinner',\n                from: day[1].start,\n                to: day[1].end\n            });\n        }\n\n        for (const [idx, assignment] of assignments.entries()) {\n            const block = new_blocks[idx];\n            if (unfixed[assignment].info.type == 'rest') continue;\n            fixed[block.day].push({\n                info: unfixed[assignment].info,\n                name: unfixed[assignment].name,\n                from: block.start,\n                to: block.end\n            });\n        }\n\n        console.log(fixed);\n        setCalendarData(fixed);\n        console.log(loss);\n    }\n\n    return (\n        <div className={styles.form}>\n            <div className={styles.header}>\n                <div className={styles.quote}>\n                    “I feel the need; the need for <strong>sleep</strong>.”\n                </div>\n                <h1>🗓️ CMU Schedule Helper</h1>\n                \n                <p>\n                    To all CMU students, we know the pain of scheduling, especially with remote and online classes being the norm now due to COVID-19. This schedule maker helps you make a well-balanced schedule: classes, study, meals, relaxation and at least 8 hours of sleep every day, so you can make the most of your time.\n                </p>\n\n                <p>Let's get started with a few questions.</p>\n            </div>\n            <div className={styles.card}>\n                <div className={styles.question}>Are you a day or night person?</div>\n                <p>We'll use this to plan your relaxation and work time slots so you can be the most productive!</p>\n                <Select options={typeOptions} ref={typeInput}/>\n            </div>\n            <div className={styles.card}>\n                <div className={styles.question}>What classes are you taking?</div>\n                <p>We'll automatically fill in your lecture and recitation times, and use FCE data to predict how much study time you'll need.</p>\n                <ClassForm />\n            </div>\n            <div className={styles.card}>\n                <div className={styles.question}>What fixed commitments do you have?</div>\n                <p>This could be meetings, club sessions or other commitments that recur every week.</p>\n                <CommitmentForm />\n            </div>\n            <div className={styles.card}>\n                <div className={styles.question}>What else do you need to get done each week?</div>\n                <p>Just put things you'd like to dedicate some time to each week, like practicing an instrument or exercising.</p>\n                <TaskForm />\n            </div>\n            <div className={styles.button} onClick={makeSchedule}>\n                Generate a Schedule ↓\n            </div>\n        </div>\n    )\n};\n\nexport default Form;","export const assign_meals = (blocks) => {\n    const ideal_lunch = 12 * 60;\n    const ideal_dinner = 18 * 60;\n\n    let meal_blocks = [];\n    let new_blocks = [];\n\n    blocks.map((day, day_idx) => {\n        let lunch_blocks = [...day].sort((a, b) => {\n            return Math.pow(a.start - ideal_lunch, 2) - Math.pow(b.start - ideal_lunch, 2);\n        });\n        let lunch_block = lunch_blocks[0];\n\n        let dinner_blocks = [...day].sort((a, b) => {\n            return Math.pow(a.start - ideal_dinner, 2) - Math.pow(b.start - ideal_dinner, 2);\n        });\n        let dinner_block = dinner_blocks[0];\n\n        meal_blocks.push([lunch_block, dinner_block]);\n        new_blocks = new_blocks.concat(day.filter(event => {\n            return (event.start != dinner_block.start) && (event.start != lunch_block.start);\n        }).map(event => ({...event, day: day_idx})));\n    });\n\n    return [meal_blocks, new_blocks];\n}","import React, { useRef } from 'react';\nimport styles from './Calendar.module.scss';\nimport { minsToTimeStr, dayStrs } from '../Util.js';\nimport { useStore } from '../stores/SelectedClassStore.js';\nimport { useInfoStore } from '../stores/Info.js';\nimport KolorWheel from 'kolorwheel';\n\nconst Calendar = (props) => {\n    const startTime = 4 * 60;\n    const endTime = 26 * 60;\n    const step = 2 * 60;\n\n    const timeEls = [];\n    const classes = useStore(state => state.classes);\n    const tasks = useInfoStore(state => state.tasks);\n\n    const colorMap = {};\n    const taskColorMap = {};\n\n    for (var i = 0; i < classes.length; i++) {\n        colorMap[classes[i].courseData.courseID] = new KolorWheel([i * 360 / classes.length, 50, 70]);\n    }\n\n    for (var i = 0; i < tasks.length; i++) {\n        taskColorMap[tasks[i].name] = new KolorWheel([i * 360 / tasks.length + 100, 20, 50]);\n    }\n    \n    for (let i = startTime; i < endTime; i += step) {\n        timeEls.push(<span>{minsToTimeStr(i)}</span>);\n    }\n\n    return (<div className={styles.calendar}>\n        <div className={styles.times}>\n            {timeEls}\n        </div>\n        <div className={styles.right}>\n            {\n                props.data.map((day, idx) =>\n                    <div className={styles.calendarItems}>\n                        <div className={styles.dotw}>{dayStrs[idx+1]}</div>\n                            <div className={styles.dayItems}>\n                                <div className={styles.wakeItem} style={{\n                                    bottom: `${100 - (props.wakeTime - startTime) / (endTime - startTime) * 100}%`\n                                }}>\n                                    { idx == 3 ? minsToTimeStr(props.wakeTime) : \"\" }\n                                </div>\n                                <div className={styles.sleepItem} style={{\n                                    top: `${(props.sleepTime - startTime) / (endTime - startTime) * 100}%`\n                                }}>\n                                    { idx == 3 ? minsToTimeStr(props.sleepTime) : \"\" }\n                                </div>\n                                {\n                                    day.map((item) => {\n                                        let color = \"grey\";\n                                        if (['lecture', 'recitation', 'study'].includes(item.info.type)) {\n                                            color = new KolorWheel(colorMap[item.info.course]);\n                                            if (item.info.type == 'recitation') {\n                                                color.l += 20;\n                                            }\n\n                                            if (item.info.type == 'study') {\n                                                color.s += 20;\n                                            }\n                                            color = color.getHex();\n                                        } else if (item.info.type == 'meal') {\n                                            color = '#ddd';\n                                        } else if (item.info.type == 'others') {\n                                            color = new KolorWheel(taskColorMap[item.name]);\n                                            color = color.getHex();\n                                        }\n                                        return <div className={styles.item} style={{\n                                                    top: `${(item.from - startTime) / (endTime - startTime) * 100}%`,\n                                                    height: `${(item.to - item.from) / (endTime - startTime) * 100 - 0.5}%`,\n                                                    backgroundColor: color,\n                                                    color: item.info.type == 'others' ? 'white' : 'black'\n                                                }}>\n                                            <div className={styles.itemName}>\n                                                {item.name}\n                                            </div>\n                                            <div className={styles.timeInfo}>\n                                                {minsToTimeStr(item.from) + \" – \" + minsToTimeStr(item.to)}\n                                            </div>\n                                        </div>;\n                                    })\n                                }</div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>);\n}\n\nexport default Calendar;","import React, { useRef } from 'react';\nimport styles from './CalendarExplanation.module.scss';\n\nconst CalendarExplanation = (props) => {\n\n    return (\n        <div className={styles.explanation}>\n            <div className={styles.header}>\n                <h1>How was this generated?</h1>\n                <p>We use a few different heuristics to plan a schedule. Remember, computers can be dumb too. Adjust the schedule to suit your needs!</p>\n            </div>\n            <div className={styles.card}>\n                <h1 className={styles.cardHeader}>Consistent Sleep Schedule</h1>\n                <p>We generate a schedule with a consistent sleep/wake time, and with at least eight hours of sleep.</p>\n            </div>\n            <div className={styles.card}>\n                <h1 className={styles.cardHeader}>Study Breaks</h1>\n                <p>We minimise back-to-back study sessions so that your productivity remains high.</p>\n            </div>\n            <div className={styles.card}>\n                <h1 className={styles.cardHeader}>Productive Studying</h1>\n                <p>Based on whether you are a day or night person, we prioritise placing study sessions either in the day or night.</p>\n            </div>\n            <div className={styles.card}>\n                <h1 className={styles.cardHeader}>Better Weekends</h1>\n                <p>Aim to have a lighter workload on the weekends.</p>\n            </div>\n            <div className={styles.footer}>\n                <p>Made for HackCMU 2020.</p>\n            </div>\n        </div>\n    )\n};\n\nexport default CalendarExplanation;","import React from 'react';\nimport './App.css';\nimport Form from './components/Form.js';\nimport Calendar from './components/Calendar.js';\nimport { useInfoStore } from './stores/Info.js';\nimport CalendarExplanation from './components/CalendarExplanation';\n\nfunction App() {\n  const calendarData = useInfoStore(state => state.calendarData);\n  const sleepTime = useInfoStore(state => state.sleepTime);\n  const wakeTime = useInfoStore(state => state.wakeTime);\n\n  return (\n    <div className=\"App\">\n      <Form />\n      <Calendar data={calendarData} wakeTime={wakeTime} sleepTime={sleepTime}/>\n      <CalendarExplanation />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeInput\":\"CommitmentForm_timeInput__1fB42\",\"select\":\"CommitmentForm_select__271DD\",\"input\":\"CommitmentForm_input__1nCCH\",\"add\":\"CommitmentForm_add__21p3A\",\"commitment\":\"CommitmentForm_commitment__3LCTd\",\"delete\":\"CommitmentForm_delete__1Ers1\",\"header\":\"CommitmentForm_header__2v1aL\",\"dayTime\":\"CommitmentForm_dayTime__3VQKM\",\"timeInfo\":\"CommitmentForm_timeInfo__Welsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__L3m-E\",\"header\":\"Form_header__1XDMy\",\"quote\":\"Form_quote__11Kw1\",\"card\":\"Form_card__29Ilx\",\"question\":\"Form_question__waxFX\",\"button\":\"Form_button__-gZDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Calendar_calendar__3jvP9\",\"times\":\"Calendar_times__2Hjdk\",\"calendarItems\":\"Calendar_calendarItems__6h0nS\",\"dotw\":\"Calendar_dotw__3sYDA\",\"dayItems\":\"Calendar_dayItems__2WZJe\",\"wakeItem\":\"Calendar_wakeItem__2eyDn\",\"sleepItem\":\"Calendar_sleepItem__3ECg7\",\"item\":\"Calendar_item__3cfDJ\",\"timeInfo\":\"Calendar_timeInfo__3YTOB\",\"itemName\":\"Calendar_itemName__2oiz_\",\"right\":\"Calendar_right__rgHpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"explanation\":\"CalendarExplanation_explanation__FzoiX\",\"header\":\"CalendarExplanation_header__2jG5D\",\"card\":\"CalendarExplanation_card__LC9qN\",\"cardHeader\":\"CalendarExplanation_cardHeader__1JE7I\",\"footer\":\"CalendarExplanation_footer__21GPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TaskForm_input__224G7\",\"inputName\":\"TaskForm_inputName__noQZu\",\"inputHours\":\"TaskForm_inputHours__16VnN\",\"task\":\"TaskForm_task__7rb-J\",\"delete\":\"TaskForm_delete__lakFv\",\"header\":\"TaskForm_header__F5IJa\",\"timeInfo\":\"TaskForm_timeInfo__jVz2v\"};"],"sourceRoot":""}